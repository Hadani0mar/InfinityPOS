name: Auto Update System

on:
  push:
    branches: [ master ]
    tags: [ 'v*' ]
  release:
    types: [ published ]
  workflow_dispatch:

permissions:
  contents: write
  packages: write

jobs:
  build-and-release:
    runs-on: windows-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Debug Info
      run: |
        echo "Event name: ${{ github.event_name }}"
        echo "Ref: ${{ github.ref }}"
        echo "Ref name: ${{ github.ref_name }}"
        echo "Ref type: ${{ github.ref_type }}"
        echo "Should create release: ${{ github.ref_type == 'tag' || github.ref == 'refs/heads/master' }}"
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'
    
    - name: Restore dependencies
      run: dotnet restore
    
    - name: Build
      run: dotnet build --configuration Release --no-restore
    
    - name: Publish Single File
      run: dotnet publish --configuration Release --output ./publish --no-build -r win-x64 --self-contained true /p:PublishSingleFile=true
    
    - name: Create Release Package
      run: |
        # Copy appsettings.json to publish directory
        Copy-Item "./appsettings.json" "./publish/appsettings.json" -Force
        
        # Copy README to publish directory
        Copy-Item "./DOWNLOAD_FROM_GITHUB.md" "./publish/README.md" -Force
        
        # Create dist directory for installer
        New-Item -ItemType Directory -Path "./dist" -Force
        New-Item -ItemType Directory -Path "./dist/publish" -Force
        
        # Copy application files to dist
        Copy-Item "./publish/*" "./dist/publish/" -Recurse -Force
        Copy-Item "./appsettings.json" "./dist/" -Force
        Copy-Item "./DOWNLOAD_FROM_GITHUB.md" "./dist/" -Force
        
        # Create installer using echo commands
        echo "@echo off" > "./dist/SmartInventoryPro_Setup_v1.6.0.exe"
        echo "chcp 65001 >nul" >> "./dist/SmartInventoryPro_Setup_v1.6.0.exe"
        echo "title SmartInventory Pro Installer v1.6.0" >> "./dist/SmartInventoryPro_Setup_v1.6.0.exe"
        echo "echo." >> "./dist/SmartInventoryPro_Setup_v1.6.0.exe"
        echo "echo ========================================" >> "./dist/SmartInventoryPro_Setup_v1.6.0.exe"
        echo "echo    SmartInventory Pro Installer v1.6.0" >> "./dist/SmartInventoryPro_Setup_v1.6.0.exe"
        echo "echo ========================================" >> "./dist/SmartInventoryPro_Setup_v1.6.0.exe"
        echo "echo." >> "./dist/SmartInventoryPro_Setup_v1.6.0.exe"
        echo "echo Welcome to SmartInventory Pro" >> "./dist/SmartInventoryPro_Setup_v1.6.0.exe"
        echo "echo." >> "./dist/SmartInventoryPro_Setup_v1.6.0.exe"
        echo "echo This installer will install SmartInventory Pro on your computer." >> "./dist/SmartInventoryPro_Setup_v1.6.0.exe"
        echo "echo SmartInventory Pro is an advanced business management system." >> "./dist/SmartInventoryPro_Setup_v1.6.0.exe"
        echo "echo." >> "./dist/SmartInventoryPro_Setup_v1.6.0.exe"
        echo "set \"APP_NAME=SmartInventory Pro\"" >> "./dist/SmartInventoryPro_Setup_v1.6.0.exe"
        echo "set \"APP_DIR=%PROGRAMFILES%\%APP_NAME%\"" >> "./dist/SmartInventoryPro_Setup_v1.6.0.exe"
        echo "set \"START_MENU=%APPDATA%\Microsoft\Windows\Start Menu\Programs\"" >> "./dist/SmartInventoryPro_Setup_v1.6.0.exe"
        echo "echo [INFO] Installing %APP_NAME%..." >> "./dist/SmartInventoryPro_Setup_v1.6.0.exe"
        echo "echo." >> "./dist/SmartInventoryPro_Setup_v1.6.0.exe"
        echo "if not exist \"%APP_DIR%\" mkdir \"%APP_DIR%\"" >> "./dist/SmartInventoryPro_Setup_v1.6.0.exe"
        echo "REM Check if application is already installed" >> "./dist/SmartInventoryPro_Setup_v1.6.0.exe"
        echo "if exist \"%APP_DIR%\SmartInventoryPro.exe\" (" >> "./dist/SmartInventoryPro_Setup_v1.6.0.exe"
        echo "    echo [INFO] Found existing installation" >> "./dist/SmartInventoryPro_Setup_v1.6.0.exe"
        echo "    echo [INFO] Updating application..." >> "./dist/SmartInventoryPro_Setup_v1.6.0.exe"
        echo "    echo." >> "./dist/SmartInventoryPro_Setup_v1.6.0.exe"
        echo "    REM Stop running application" >> "./dist/SmartInventoryPro_Setup_v1.6.0.exe"
        echo "    taskkill /f /im SmartInventoryPro.exe 2>nul" >> "./dist/SmartInventoryPro_Setup_v1.6.0.exe"
        echo "    timeout /t 2 /nobreak >nul" >> "./dist/SmartInventoryPro_Setup_v1.6.0.exe"
        echo ")" >> "./dist/SmartInventoryPro_Setup_v1.6.0.exe"
        echo "echo [INFO] Copying application files..." >> "./dist/SmartInventoryPro_Setup_v1.6.0.exe"
        echo "xcopy \"publish\*\" \"%APP_DIR%\" /Y /E /I" >> "./dist/SmartInventoryPro_Setup_v1.6.0.exe"
        echo "REM Only copy appsettings.json if it doesn't exist (preserve user settings)" >> "./dist/SmartInventoryPro_Setup_v1.6.0.exe"
        echo "if not exist \"%APP_DIR%\appsettings.json\" (" >> "./dist/SmartInventoryPro_Setup_v1.6.0.exe"
        echo "    if exist \"appsettings.json\" copy \"appsettings.json\" \"%APP_DIR%\" >nul" >> "./dist/SmartInventoryPro_Setup_v1.6.0.exe"
        echo "    echo [INFO] Copied default settings file" >> "./dist/SmartInventoryPro_Setup_v1.6.0.exe"
        echo ") else (" >> "./dist/SmartInventoryPro_Setup_v1.6.0.exe"
        echo "    echo [INFO] Preserved user settings" >> "./dist/SmartInventoryPro_Setup_v1.6.0.exe"
        echo ")" >> "./dist/SmartInventoryPro_Setup_v1.6.0.exe"
        echo "echo [SUCCESS] Application files copied" >> "./dist/SmartInventoryPro_Setup_v1.6.0.exe"
        echo "echo [INFO] Creating shortcuts..." >> "./dist/SmartInventoryPro_Setup_v1.6.0.exe"
        echo "powershell -Command \"$WshShell = New-Object -comObject WScript.Shell; $Shortcut = $WshShell.CreateShortcut('%START_MENU%\%APP_NAME%.lnk'); $Shortcut.TargetPath = '%APP_DIR%\SmartInventoryPro.exe'; $Shortcut.WorkingDirectory = '%APP_DIR%'; $Shortcut.Save()\" 2>nul" >> "./dist/SmartInventoryPro_Setup_v1.6.0.exe"
        echo "set \"DESKTOP_SHORTCUT=%USERPROFILE%\Desktop\%APP_NAME%.lnk\"" >> "./dist/SmartInventoryPro_Setup_v1.6.0.exe"
        echo "powershell -Command \"$WshShell = New-Object -comObject WScript.Shell; $Shortcut = $WshShell.CreateShortcut('%DESKTOP_SHORTCUT%'); $Shortcut.TargetPath = '%APP_DIR%\SmartInventoryPro.exe'; $Shortcut.WorkingDirectory = '%APP_DIR%'; $Shortcut.Save()\" 2>nul" >> "./dist/SmartInventoryPro_Setup_v1.6.0.exe"
        echo "echo." >> "./dist/SmartInventoryPro_Setup_v1.6.0.exe"
        echo "echo ========================================" >> "./dist/SmartInventoryPro_Setup_v1.6.0.exe"
        echo "if exist \"%APP_DIR%\SmartInventoryPro.exe\" (" >> "./dist/SmartInventoryPro_Setup_v1.6.0.exe"
        echo "    echo    Update completed successfully!" >> "./dist/SmartInventoryPro_Setup_v1.6.0.exe"
        echo ") else (" >> "./dist/SmartInventoryPro_Setup_v1.6.0.exe"
        echo "    echo    Installation completed successfully!" >> "./dist/SmartInventoryPro_Setup_v1.6.0.exe"
        echo ")" >> "./dist/SmartInventoryPro_Setup_v1.6.0.exe"
        echo "echo ========================================" >> "./dist/SmartInventoryPro_Setup_v1.6.0.exe"
        echo "echo." >> "./dist/SmartInventoryPro_Setup_v1.6.0.exe"
        echo "echo %APP_NAME% installed/updated in: %APP_DIR%" >> "./dist/SmartInventoryPro_Setup_v1.6.0.exe"
        echo "echo Shortcuts created in Start Menu and Desktop" >> "./dist/SmartInventoryPro_Setup_v1.6.0.exe"
        echo "echo." >> "./dist/SmartInventoryPro_Setup_v1.6.0.exe"
        echo "echo Note: Your settings have been preserved" >> "./dist/SmartInventoryPro_Setup_v1.6.0.exe"
        echo "echo." >> "./dist/SmartInventoryPro_Setup_v1.6.0.exe"
        echo "echo Press any key to exit..." >> "./dist/SmartInventoryPro_Setup_v1.6.0.exe"
        echo "pause >nul" >> "./dist/SmartInventoryPro_Setup_v1.6.0.exe"
        
        # Create update ZIP file
        Compress-Archive -Path "./publish/*" -DestinationPath "./SmartInventoryPro_Update.zip" -Force
        
        # Create installer ZIP file
        Compress-Archive -Path "./dist/*" -DestinationPath "./SmartInventoryPro_Installer.zip" -Force
        
        # Create update info file
        $version = (Get-Content "./InfinityPOS.csproj" | Select-String "Version" | ForEach-Object { $_.Line -replace '.*Version>([^<]+)<.*', '$1' })
        $commitMessage = "${{ github.event.head_commit.message }}"
        $updateInfo = @{
          version = $version
          date = (Get-Date).ToString("yyyy-MM-dd HH:mm:ss")
          message = $commitMessage
          commit_hash = "${{ github.sha }}"
          download_url = "https://github.com/${{ github.repository }}/releases/latest/download/SmartInventoryPro_Update.zip"
        } | ConvertTo-Json
        
        $updateInfo | Out-File -FilePath "./update_info.json" -Encoding UTF8
    
    - name: Upload Release Assets
      uses: actions/upload-artifact@v4
      with:
        name: SmartInventoryPro_Update
        path: |
          SmartInventoryPro_Update.zip
          SmartInventoryPro_Installer.zip
          update_info.json
    
    - name: Create Release
      if: github.ref_type == 'tag' || github.ref == 'refs/heads/master'
      uses: softprops/action-gh-release@v2
      with:
        tag_name: ${{ github.ref_name }}
        name: SmartInventory Pro ${{ github.ref_name }}
        body: |
          ## تحديث تلقائي
          
          - **الإصدار**: ${{ github.ref_name }}
          - **التاريخ**: ${{ github.event.head_commit.timestamp }}
          - **الرسالة**: ${{ github.event.head_commit.message }}
          
          ### الميزات الجديدة:
          - تحسينات في الأداء
          - إصلاح الأخطاء
          - ميزات جديدة
          
          ### كيفية التثبيت:
          1. **للتثبيت الجديد**: نزل `SmartInventoryPro_Installer.zip` واستخرج الملفات واضغط على `SmartInventoryPro_Setup_v1.5.1.exe`
          2. **للتحديث**: اضغط على زر "🔄 التحديثات" في التطبيق أو انتظر التحديث التلقائي
          
          ### الميزات الجديدة في v1.5.1:
          - ✅ أيقونة لهب 🔥 فوق "أفضل منتج" و "أفضل فئة"
          - ✅ تحسينات بصرية للواجهة
          - ✅ مثبت محسن مع واجهة سهلة
          - ✅ إصلاحات أخطاء التحديثات
        files: |
          SmartInventoryPro_Update.zip
          SmartInventoryPro_Installer.zip
          update_info.json
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
